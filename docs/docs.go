// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/genres": {
            "get": {
                "description": "Возвращает список всех жанров, хранящихся в базе данных.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Жанры фильмов"
                ],
                "summary": "Получить все жанры (guest | user | admin)",
                "responses": {
                    "200": {
                        "description": "Список жанров",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Genre"
                            }
                        }
                    },
                    "404": {
                        "description": "Жанры не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создаёт новый жанр.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Жанры фильмов"
                ],
                "summary": "Создать жанр (admin)",
                "parameters": [
                    {
                        "description": "Данные жанра",
                        "name": "genre",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.GenreData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID созданного жанра",
                        "schema": {
                            "$ref": "#/definitions/main.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/genres/search": {
            "get": {
                "description": "Возвращает список жанров, имена которых содержат указанную строку (регистронезависимый поиск).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Жанры фильмов"
                ],
                "summary": "Поиск жанров по имени (guest | user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Строка для поиска",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список найденных жанров",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Genre"
                            }
                        }
                    },
                    "400": {
                        "description": "Строка поиска пуста",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Жанры не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/genres/{id}": {
            "get": {
                "description": "Возвращает жанр по ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Жанры фильмов"
                ],
                "summary": "Получить жанр по ID (guest | user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID жанра",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Жанр",
                        "schema": {
                            "$ref": "#/definitions/main.Genre"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Жанр не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет существующий жанр.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Жанры фильмов"
                ],
                "summary": "Обновить жанр (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID жанра",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новые данные жанра",
                        "name": "genre",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.GenreData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные о жанре успешно обновлены"
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Жанр не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет жанр по ID.",
                "tags": [
                    "Жанры фильмов"
                ],
                "summary": "Удалить жанр (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID жанра",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Данные о жанре успешно удалены"
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Жанр не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Конфликт при удалении жанра",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/halls": {
            "get": {
                "description": "Возвращает список всех кинозалов, содержащихся в базе данных.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Кинозалы"
                ],
                "summary": "Получить все кинозалы (guest | user | admin)",
                "responses": {
                    "200": {
                        "description": "Список кинозалов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Hall"
                            }
                        }
                    },
                    "404": {
                        "description": "Данные не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создаёт новый кинозал.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Кинозалы"
                ],
                "summary": "Создать кинозал (admin)",
                "parameters": [
                    {
                        "description": "Данные кинозала",
                        "name": "hall",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.HallData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID созданного кинозала",
                        "schema": {
                            "$ref": "#/definitions/main.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Конфликт при создании кинозала",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/halls/by-screen-type": {
            "get": {
                "description": "Возвращает список залов с указанным типом экрана.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Кинозалы"
                ],
                "summary": "Получить залы по типу экрана (guest | user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID типа экрана",
                        "name": "screen_type_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список найденных кинозалов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Hall"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID типа экрана",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Залы не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/halls/search": {
            "get": {
                "description": "Возвращает список залов, названия которых содержат указанную строку.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Кинозалы"
                ],
                "summary": "Поиск залов по названию (guest | user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Строка для поиска",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список найденных кинозалов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Hall"
                            }
                        }
                    },
                    "400": {
                        "description": "Строка поиска пуста",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Залы не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/halls/{hall_id}/seats": {
            "get": {
                "description": "Возвращает список мест в указанном зале.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Места"
                ],
                "summary": "Получить места по ID зала (guest | user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID зала",
                        "name": "hall_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список мест",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Seat"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID зала",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Места не найдены",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/halls/{id}": {
            "get": {
                "description": "Возвращает кинозал по ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Кинозалы"
                ],
                "summary": "Получить кинозал по ID (guest | user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID зала",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные кинозала",
                        "schema": {
                            "$ref": "#/definitions/main.Hall"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Данные не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет существующий кинозал.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Кинозалы"
                ],
                "summary": "Обновить кинозал (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID зала",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновлённые данные зала",
                        "name": "hall",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.HallData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные о кинозале успешно обновлены"
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Зал не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Конфликт при обновлении кинозала",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет кинозал по ID.",
                "tags": [
                    "Кинозалы"
                ],
                "summary": "Удалить кинозал (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID кинозала",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Данные о кинозале успешно удалены"
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Данные не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Конфликт при удалении кинозала",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movie-shows": {
            "get": {
                "description": "Возвращает список всех киносеансов, хранящихся в базе данных.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Киносеансы"
                ],
                "summary": "Получить все киносеансы (guest | user | admin)",
                "responses": {
                    "200": {
                        "description": "Список киносеансов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.MovieShow"
                            }
                        }
                    },
                    "404": {
                        "description": "Киносеансы не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создаёт новый киносеанс.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Киносеансы"
                ],
                "summary": "Создать киносеанс (admin)",
                "parameters": [
                    {
                        "description": "Данные киносеанса",
                        "name": "movie_show",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.MovieShowData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID созданного киносеанса",
                        "schema": {
                            "$ref": "#/definitions/main.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Конфликт при создании киносеанса",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movie-shows/by-date/{date}": {
            "get": {
                "description": "Возвращает сеансы, начинающиеся в указанный день.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Киносеансы"
                ],
                "summary": "Получить сеансы на указанную дату (guest | user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Дата (YYYY-MM-DD)",
                        "name": "date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные о киносеансах",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.MovieShow"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат даты",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Киносеансы в указанную дату не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movie-shows/upcoming": {
            "get": {
                "description": "Возвращает сеансы, начинающиеся в ближайшие N часов.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Киносеансы"
                ],
                "summary": "Получить ближайшие сеансы (guest | user | admin)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Период в часах (по умолчанию 24)",
                        "name": "hours",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные о киносеансах",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.MovieShow"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат даты",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Киносеансы в указанную дату не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movie-shows/{id}": {
            "get": {
                "description": "Возвращает даныне о киносеансе по ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Киносеансы"
                ],
                "summary": "Получить киносеанс по ID (guest | user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID киносеанса фильма",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные киносеанса",
                        "schema": {
                            "$ref": "#/definitions/main.MovieShow"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Киносеанс не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет данные о киносеансе.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Киносеансы"
                ],
                "summary": "Обновить киносеанс (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID киносеанса",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новые данные киносеанса",
                        "name": "movie_show",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.MovieShowData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные киносеанса обновлены"
                    },
                    "400": {
                        "description": "Неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Киносеанс не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Конфликт при обновлении киносеанса",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет данные о киносеансе.",
                "tags": [
                    "Киносеансы"
                ],
                "summary": "Удалить киносеанс фильма (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID киносеанса",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Данные о киносеансе удалёны"
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Киносеанс не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Конфликт при удалении киносеанса",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies": {
            "get": {
                "description": "Возвращает список всех фильмов, содержащихся в базе данных.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Фильмы"
                ],
                "summary": "Получить все фильмы (guest | user | admin)",
                "responses": {
                    "200": {
                        "description": "Список фильмов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Movie"
                            }
                        }
                    },
                    "404": {
                        "description": "Фильмы не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создаёт новый фильм.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Фильмы"
                ],
                "summary": "Создать фильм (admin)",
                "parameters": [
                    {
                        "description": "Данные фильма",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.MovieData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID созданного фильма",
                        "schema": {
                            "$ref": "#/definitions/main.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/by-genres/search": {
            "get": {
                "description": "Возвращает фильмы, относящиеся ко всем указанным жанрам.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Фильмы"
                ],
                "summary": "Получить фильмы по списку жанров (guest | user | admin)",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Список ID жанров",
                        "name": "genre_ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Найденные фильмы",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Movie"
                            }
                        }
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Жанры не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/by-title/search": {
            "get": {
                "description": "Возвращает фильмы, в названии которых содержится заданная строка.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Фильмы"
                ],
                "summary": "Поиск фильмов по названию (guest | user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Поисковый запрос",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Найденные фильмы",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Movie"
                            }
                        }
                    },
                    "400": {
                        "description": "Строка поиска пуста",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Данные не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/{id}": {
            "get": {
                "description": "Возвращает фильм по ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Фильмы"
                ],
                "summary": "Получить фильм по ID (guest | user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID фильма",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Фильм",
                        "schema": {
                            "$ref": "#/definitions/main.Movie"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Фильм не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет существующий фильм.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Фильмы"
                ],
                "summary": "Обновить фильм (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID фильма",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новые данные фильма",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.MovieData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные о фильме успешно обновлены"
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Фильм не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет фильм по ID.",
                "tags": [
                    "Фильмы"
                ],
                "summary": "Удалить фильм (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID фильма",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Данные о фильме успешно удалены"
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Фильм не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Конфликт при удалении фильма",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/{movie_id}/reviews": {
            "get": {
                "description": "Возвращает все отзывы для указанного фильма.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Отзывы"
                ],
                "summary": "Получить отзывы по ID фильма (guest | user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID фильма",
                        "name": "movie_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список отзывов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Review"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID фильма",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Отзывы не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/movies/{movie_id}/shows": {
            "get": {
                "description": "Возвращает киносеансы для указанного фильма в ближайшие N часов.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Киносеансы"
                ],
                "summary": "Получить киносеансы по ID фильма (guest | user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID фильма",
                        "name": "movie_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Период в часах (по умолчанию 24)",
                        "name": "hours",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные о найденных киносеансах",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.MovieShow"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID фильма или параметра hours",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Киносеансы для данного фильма не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reviews": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список всех отзывов, хранящихся в базе данных.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Отзывы"
                ],
                "summary": "Получить все отзывы",
                "responses": {
                    "200": {
                        "description": "Список отзывов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Review"
                            }
                        }
                    },
                    "404": {
                        "description": "Отзывы не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создаёт новый отзыв.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Отзывы"
                ],
                "summary": "Создать отзыв (user | admin)",
                "parameters": [
                    {
                        "description": "Данные отзыва",
                        "name": "review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.ReviewData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID созданного отзыва",
                        "schema": {
                            "$ref": "#/definitions/main.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reviews/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает отзыв по ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Отзывы"
                ],
                "summary": "Получить отзыв по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID отзыва",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Отзыв",
                        "schema": {
                            "$ref": "#/definitions/main.Review"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Отзыв не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет существующий отзыв.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Отзывы"
                ],
                "summary": "Обновить отзыв (user* | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID отзыва",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новые данные отзыва",
                        "name": "review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.ReviewData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные отзыва успешно обновлены"
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Отзыв не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет отзыв по ID.",
                "tags": [
                    "Отзывы"
                ],
                "summary": "Удалить отзыв (user* | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID отзыва",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Данные отзыва успешно удалены"
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Отзыв не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/screen-types": {
            "get": {
                "description": "Возвращает список всех типов экранов, содержащихся в базе данных.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Типы экранов"
                ],
                "summary": "Получить все типы экранов (guest | user | admin)",
                "responses": {
                    "200": {
                        "description": "Список типов экранов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.ScreenType"
                            }
                        }
                    },
                    "404": {
                        "description": "Типы экранов не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создаёт новый тип экрана.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Типы экранов"
                ],
                "summary": "Создать тип экрана (admin)",
                "parameters": [
                    {
                        "description": "Данные типа экрана",
                        "name": "screen_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.ScreenTypeData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID созданного типа экрана",
                        "schema": {
                            "$ref": "#/definitions/main.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/screen-types/search": {
            "get": {
                "description": "Возвращает типы экранов, название которых содержит указанную строку.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Типы экранов"
                ],
                "summary": "Поиск типов экранов по названию (guest | user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Поисковый запрос",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список типов экранов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.ScreenType"
                            }
                        }
                    },
                    "400": {
                        "description": "Строка поиска пуста",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Типы экранов не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/screen-types/{id}": {
            "get": {
                "description": "Возвращает тип экрана по ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Типы экранов"
                ],
                "summary": "Получить тип экрана по ID (guest | user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID типа экрана",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Тип экрана",
                        "schema": {
                            "$ref": "#/definitions/main.ScreenType"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Тип экрана не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет существующий тип экрана.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Типы экранов"
                ],
                "summary": "Обновить тип экрана (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID типа экрана",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновлённые данные типа экрана",
                        "name": "screen_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.ScreenTypeData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные о типе экрана успешно обновлены"
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Тип экранов не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет тип экрана по ID.",
                "tags": [
                    "Типы экранов"
                ],
                "summary": "Удалить тип экрана (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID типа экрана",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Данные о типе экрана успешно удалены"
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Тип экрана не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/seat-types": {
            "get": {
                "description": "Возвращает список всех типов мест, содержащихся в базе данных.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Типы мест"
                ],
                "summary": "Получить все типы мест (guest | user | admin)",
                "responses": {
                    "200": {
                        "description": "Список типов мест",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.SeatType"
                            }
                        }
                    },
                    "404": {
                        "description": "Типы мест не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создаёт новый тип места.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Типы мест"
                ],
                "summary": "Создать тип места (admin)",
                "parameters": [
                    {
                        "description": "Данные типа места",
                        "name": "seat_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.SeatTypeData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID созданного типа места",
                        "schema": {
                            "$ref": "#/definitions/main.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/seat-types/search": {
            "get": {
                "description": "Возвращает типы места, название которых содержит указанную строку.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Типы мест"
                ],
                "summary": "Поиск типов места по названию (guest | user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Поисковый запрос",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список типов мест",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.SeatType"
                            }
                        }
                    },
                    "400": {
                        "description": "Строка поиска пуста",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Типы мест не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/seat-types/{id}": {
            "get": {
                "description": "Возвращает тип места по ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Типы мест"
                ],
                "summary": "Получить тип места по ID (guest | user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID типа места",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Тип места",
                        "schema": {
                            "$ref": "#/definitions/main.SeatType"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Тип места не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет существующий тип места.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Типы мест"
                ],
                "summary": "Обновить тип места (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID типа места",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновлённые данные типа места",
                        "name": "seat_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.SeatTypeData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные о типе места успешно обновлены"
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Тип места не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет тип места по ID.",
                "tags": [
                    "Типы мест"
                ],
                "summary": "Удалить тип места (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID типа места",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Данные о типе места успешно удалены"
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Тип места не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/seats": {
            "get": {
                "description": "Возвращает список всех мест, содержащихся в базе данных.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Места"
                ],
                "summary": "Получить все места (guest | user | admin)",
                "responses": {
                    "200": {
                        "description": "Список мест",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Seat"
                            }
                        }
                    },
                    "404": {
                        "description": "Места не найдены",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создаёт новое место.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Места"
                ],
                "summary": "Создать место (admin)",
                "parameters": [
                    {
                        "description": "Данные места",
                        "name": "seat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.SeatData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID созданного места",
                        "schema": {
                            "$ref": "#/definitions/main.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/seats/{id}": {
            "get": {
                "description": "Возвращает место по ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Места"
                ],
                "summary": "Получить место по ID (guest | user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID места",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Место",
                        "schema": {
                            "$ref": "#/definitions/main.Seat"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Место не найдено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет существующее место.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Места"
                ],
                "summary": "Обновить место (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID места",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновлённые данные места",
                        "name": "seat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.SeatData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные о месте успешно обновлены"
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Место не найдено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет место по ID.",
                "tags": [
                    "Места"
                ],
                "summary": "Удалить место (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID места",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Данные о месте успешно удалены"
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Место не найдено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tickets": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создаёт новый билет.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Билеты"
                ],
                "summary": "Создать билет (admin)",
                "parameters": [
                    {
                        "description": "Билет",
                        "name": "ticket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.TicketData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID созданного билета",
                        "schema": {
                            "$ref": "#/definitions/main.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tickets/movie-show/{movie_show_id}": {
            "get": {
                "description": "Возвращает список всех билетов по ID сеанаса, содержащихся в базе данных.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Билеты"
                ],
                "summary": "Получить все билеты для сеанса фильма по ID (guest | user | admin) ПОДУМАТЬ",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID показа фильма",
                        "name": "movie_show_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Ticket"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tickets/user/{user_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Билеты"
                ],
                "summary": "Получить билеты пользователя (user* | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Ticket"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tickets/{id}": {
            "get": {
                "description": "Возвращает билет по ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Билеты"
                ],
                "summary": "Получить билет по ID (guest | user | admin) ПОДУМАТЬ",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID билета",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Билет",
                        "schema": {
                            "$ref": "#/definitions/main.Ticket"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Билет не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет существующий билет.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Билеты"
                ],
                "summary": "Обновить билет (user | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID билета",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновлённые данные билета",
                        "name": "ticket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.TicketData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные о билете успешно обновлены"
                    },
                    "400": {
                        "description": "Неверный формат JSON",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Билет не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет билет по ID.",
                "tags": [
                    "Билеты"
                ],
                "summary": "Удалить билет (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID билета",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Данные о билете успешно удалены"
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Билет не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Аутентифицирует пользователя и возвращает JWT-токен.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи"
                ],
                "summary": "Вход пользователя (guest | user | admin)",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные авторизации",
                        "schema": {
                            "$ref": "#/definitions/main.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Неверный email или пароль",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Регистрирует нового пользователя в системе.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи"
                ],
                "summary": "Зарегистрировать нового пользователя (guest | user | admin)",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UserRegister"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Пользователь успешно зарегистрирован в системе"
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Пользователь с таким email уже существует",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список всех пользователей.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи"
                ],
                "summary": "Получить всех пользователей (admin)",
                "responses": {
                    "200": {
                        "description": "Список пользователей",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.User"
                            }
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователи не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает пользователя по ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи"
                ],
                "summary": "Получить пользователя по ID (user* | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь",
                        "schema": {
                            "$ref": "#/definitions/main.User"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет данные пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи"
                ],
                "summary": "Обновить пользователя (user* | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новые данные пользователя",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные пользователя успешно обновлены"
                    },
                    "400": {
                        "description": "В запросе предоставлены неверные данные",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет пользователя по ID",
                "tags": [
                    "Пользователи"
                ],
                "summary": "Удалить пользователя (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Пользователь успешно удалён"
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещён",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{user_id}/reviews": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает все отзывы указанного пользователя.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Отзывы"
                ],
                "summary": "Получить отзывы пользователя (user* | admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список отзывов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Review"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID пользователя",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Отзывы не найдены",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.AuthResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                },
                "user_id": {
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6"
                }
            }
        },
        "main.CreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9b165097-1c9f-4ea3-bef0-e505baa4ff63"
                }
            }
        },
        "main.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Описание ошибки"
                }
            }
        },
        "main.Genre": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Жанр игрового кинематографа, повествующий о той или иной эпохе, людях и событиях прошлых лет"
                },
                "id": {
                    "type": "string",
                    "example": "ad2805ab-bf4c-4f93-ac68-2e0a854022f8"
                },
                "name": {
                    "type": "string",
                    "example": "Исторический"
                }
            }
        },
        "main.GenreData": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Жанр игрового кинематографа, повествующий о той или иной эпохе, людях и событиях прошлых лет"
                },
                "name": {
                    "type": "string",
                    "example": "Исторический"
                }
            }
        },
        "main.Hall": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer",
                    "example": 150
                },
                "description": {
                    "type": "string",
                    "example": "Комфортабельный зал с современным оборудованием"
                },
                "id": {
                    "type": "string",
                    "example": "9b165097-1c9f-4ea3-bef0-e505baa4ff63"
                },
                "name": {
                    "type": "string",
                    "example": "Зал 1"
                },
                "screen_type_id": {
                    "type": "string",
                    "example": "de01f085-dffa-4347-88da-168560207511"
                }
            }
        },
        "main.HallData": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer",
                    "example": 150
                },
                "description": {
                    "type": "string",
                    "example": "Комфортабельный зал с современным оборудованием"
                },
                "name": {
                    "type": "string",
                    "example": "Зал 1"
                },
                "screen_type_id": {
                    "type": "string",
                    "example": "de01f085-dffa-4347-88da-168560207511"
                }
            }
        },
        "main.LanguageEnumType": {
            "type": "string",
            "enum": [
                "English",
                "Spanish",
                "French",
                "German",
                "Italian",
                "Русский"
            ],
            "x-enum-varnames": [
                "English",
                "Spanish",
                "French",
                "German",
                "Italian",
                "Russian"
            ]
        },
        "main.Movie": {
            "type": "object",
            "properties": {
                "age_limit": {
                    "type": "integer",
                    "example": 12
                },
                "box_office_revenue": {
                    "type": "number",
                    "example": 300000000
                },
                "description": {
                    "type": "string",
                    "example": "Эпическая история о кольце власти."
                },
                "duration": {
                    "type": "string",
                    "example": "02:58:00"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.Genre"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "9b165097-1c9f-4ea3-bef0-e505baa4ff63"
                },
                "rating": {
                    "type": "number",
                    "example": 8.8
                },
                "release_date": {
                    "type": "string",
                    "example": "2001-12-19"
                },
                "title": {
                    "type": "string",
                    "example": "Властелин колец"
                }
            }
        },
        "main.MovieData": {
            "type": "object",
            "properties": {
                "age_limit": {
                    "type": "integer",
                    "example": 12
                },
                "description": {
                    "type": "string",
                    "example": "Эпическая история о кольце власти."
                },
                "duration": {
                    "type": "string",
                    "example": "02:58:00"
                },
                "genre_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"f297eeaf-e784-43bf-a068-eef84f75baa4\"",
                        " \"c5c8e037-a073-4105-9941-21e1cb4e79dd\"]"
                    ]
                },
                "release_date": {
                    "type": "string",
                    "example": "2001-12-19"
                },
                "title": {
                    "type": "string",
                    "example": "Властелин колец"
                }
            }
        },
        "main.MovieShow": {
            "type": "object",
            "properties": {
                "hall_id": {
                    "type": "string",
                    "example": "de01f085-dffa-4347-88da-168560207511"
                },
                "id": {
                    "type": "string",
                    "example": "9b165097-1c9f-4ea3-bef0-e505baa4ff63"
                },
                "language": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/main.LanguageEnumType"
                        }
                    ],
                    "example": "Русский"
                },
                "movie_id": {
                    "type": "string",
                    "example": "1a2b3c4d-5e6f-7g8h-9i0j-k1l2m3n4o5p6"
                },
                "start_time": {
                    "type": "string",
                    "example": "2023-10-01T14:30:00Z"
                }
            }
        },
        "main.MovieShowData": {
            "type": "object",
            "properties": {
                "hall_id": {
                    "type": "string",
                    "example": "de01f085-dffa-4347-88da-168560207511"
                },
                "language": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/main.LanguageEnumType"
                        }
                    ],
                    "example": "Русский"
                },
                "movie_id": {
                    "type": "string",
                    "example": "1a2b3c4d-5e6f-7g8h-9i0j-k1l2m3n4o5p6"
                },
                "start_time": {
                    "type": "string",
                    "example": "2023-10-01T14:30:00Z"
                }
            }
        },
        "main.Review": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6"
                },
                "movie_id": {
                    "type": "string",
                    "example": "2002d9d0-80fa-4bc3-ab85-8525d1e9674c"
                },
                "rating": {
                    "type": "integer",
                    "example": 8
                },
                "review_comment": {
                    "type": "string",
                    "example": "Отличный фильм!"
                },
                "user_id": {
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6"
                }
            }
        },
        "main.ReviewData": {
            "type": "object",
            "properties": {
                "movie_id": {
                    "type": "string",
                    "example": "2002d9d0-80fa-4bc3-ab85-8525d1e9674c"
                },
                "rating": {
                    "type": "integer",
                    "example": 8
                },
                "review_comment": {
                    "type": "string",
                    "example": "Отличный фильм!"
                },
                "user_id": {
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6"
                }
            }
        },
        "main.ScreenType": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Экран с технологией IMAX для максимального погружения"
                },
                "id": {
                    "type": "string",
                    "example": "de01f085-dffa-4347-88da-168560207511"
                },
                "name": {
                    "type": "string",
                    "example": "IMAX"
                }
            }
        },
        "main.ScreenTypeData": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Экран с технологией IMAX для максимального погружения"
                },
                "name": {
                    "type": "string",
                    "example": "IMAX"
                }
            }
        },
        "main.Seat": {
            "type": "object",
            "properties": {
                "hall_id": {
                    "type": "string",
                    "example": "de01f085-dffa-4347-88da-168560207511"
                },
                "id": {
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6"
                },
                "row_number": {
                    "type": "integer",
                    "example": 5
                },
                "seat_number": {
                    "type": "integer",
                    "example": 12
                },
                "seat_type_id": {
                    "type": "string",
                    "example": "premium"
                }
            }
        },
        "main.SeatData": {
            "type": "object",
            "properties": {
                "hall_id": {
                    "type": "string",
                    "example": "de01f085-dffa-4347-88da-168560207511"
                },
                "row_number": {
                    "type": "integer",
                    "example": 5
                },
                "seat_number": {
                    "type": "integer",
                    "example": 12
                },
                "seat_type_id": {
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6"
                }
            }
        },
        "main.SeatType": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Комфортабельные места с дополнительным пространством и удобствами"
                },
                "id": {
                    "type": "string",
                    "example": "de01f085-dffa-4347-88da-168560207511"
                },
                "name": {
                    "type": "string",
                    "example": "Премиум"
                }
            }
        },
        "main.SeatTypeData": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Комфортабельные места с дополнительным пространством и удобствами"
                },
                "name": {
                    "type": "string",
                    "example": "Премиум"
                }
            }
        },
        "main.Ticket": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6"
                },
                "movie_show_id": {
                    "type": "string",
                    "example": "9b165097-1c9f-4ea3-bef0-e505baa4ff63"
                },
                "price": {
                    "type": "number",
                    "example": 800
                },
                "seat_id": {
                    "type": "string",
                    "example": "c1bf35fb-4e5f-46cb-914b-bc8d76aaca23"
                },
                "ticket_status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/main.TicketStatusEnumType"
                        }
                    ],
                    "example": "Purchased"
                },
                "user_id": {
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6"
                }
            }
        },
        "main.TicketData": {
            "type": "object",
            "properties": {
                "movie_show_id": {
                    "type": "string",
                    "example": "9b165097-1c9f-4ea3-bef0-e505baa4ff63"
                },
                "price": {
                    "type": "number",
                    "example": 800
                },
                "seat_id": {
                    "type": "string",
                    "example": "c1bf35fb-4e5f-46cb-914b-bc8d76aaca23"
                },
                "ticket_status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/main.TicketStatusEnumType"
                        }
                    ],
                    "example": "Available"
                },
                "user_id": {
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6"
                }
            }
        },
        "main.TicketStatusEnumType": {
            "type": "string",
            "enum": [
                "Purchased",
                "Reserved",
                "Available"
            ],
            "x-enum-varnames": [
                "Purchased",
                "Reserved",
                "Available"
            ]
        },
        "main.User": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "1990-01-01"
                },
                "email": {
                    "type": "string",
                    "example": "ivan@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6"
                },
                "is_blocked": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "Иван Иванов"
                }
            }
        },
        "main.UserData": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "1990-01-01"
                },
                "email": {
                    "type": "string",
                    "example": "ivan@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "Иван Иванов"
                }
            }
        },
        "main.UserLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "ivan@example.com"
                },
                "password_hash": {
                    "type": "string",
                    "example": "hashed_password"
                }
            }
        },
        "main.UserRegister": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "1990-01-01"
                },
                "email": {
                    "type": "string",
                    "example": "ivan@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "Иван Иванов"
                },
                "password_hash": {
                    "type": "string",
                    "example": "hashed_password"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Курсовая работа по базам данных",
	Description:      "Разработка базы данных для управления кинотеатром",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
